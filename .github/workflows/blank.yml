# 워크플로우 이름 (GitHub Actions 탭에 표시됩니다)
name: 'Run Test 1: KID Login'

# 이 워크플로우를 언제 실행할지 결정합니다.
on:
  # GitHub Actions 탭에서 수동으로 실행할 수 있도록 "Run workflow" 버튼을 추가합니다.
   workflow_dispatch:
    inputs:
      # 'runner_name' 이라는 이름의 입력 메뉴를 만듭니다.
      runner_name:
        description: 'Who is running this workflow?'
        required: true
        # 드롭다운 메뉴에 표시될 사용자 목록
        type: choice
        options:
          - KPLAT07
          - TPQA025

# 실행할 작업을 정의합니다.
jobs:
  # "run-kid-login" 이라는 이름의 작업을 만듭니다.
  run-kid-login:
    # Windows 최신 버전의 가상 환경에서 작업을 실행합니다.
    runs-on: windows-latest

    permissions:
      contents: write

    # 작업 단계를 순서대로 정의합니다.
    steps:
      # 1. Git 저장소의 코드를 가상 환경으로 가져옵니다.
      - name: 'Checkout Repository Code'
        uses: actions/checkout@v4

      # 2. Python 3.10 버전을 설치합니다.
      - name: 'Set up Python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # 3. pyproject.toml을 이용해 "개발 모드"로 의존성을 설치합니다. (가장 중요!)
      - name: 'Install Dependencies'
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      
      - name: 'Install Playwright Browsers'
        run: playwright install --with-deps

      # 5. "1번 KID 로그인 테스트"를 실행합니다.
      - name: 'Run KID Login Test'
        env:
          PYTHONUTF8: "1" 
          # GitHub Secrets에 저장된 값들을 환경 변수로 설정합니다.
          BASE_URL: ${{ secrets.BASE_URL }}
          USER_ID: ${{ secrets[format('USER_ID_{0}', inputs.runner_name)] }}
          USER_PW: ${{ secrets[format('USER_PW_{0}', inputs.runner_name)] }}
        # run_tests.py 스크립트에 '1'을 인자로 전달하여 1번 테스트를 실행합니다.
        run: python run_tests.py 1
      
      - name: 'Create redirection page'
        shell: bash
        run: |
          REPORT_FILE=$(find reports -maxdepth 1 -name "*.html" | head -n 1)
          echo "<meta http-equiv=\"refresh\" content=\"0; url=$(basename $REPORT_FILE)\" />" > reports/index.html

      - name: 'Deploy to GitHub Pages'
        uses: peaceiris/actions-gh-pages@v4
        with:
          # GitHub Actions가 자동으로 생성하는 특별한 토큰
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # 배포할 파일이 들어있는 폴더
          publish_dir: ./reports